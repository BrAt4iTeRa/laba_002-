#include <locale.h>
#include <stdio.h>

int main()
{
    setlocale(LC_ALL, "Russian");                                                                 //Русский язык, чтобы все понятно было
    int a, b, c, d;                                                                               //Инициализация переменных
    printf_s("Вводите стороны треугольника:\n");
    printf_s("a = ");
    scanf_s("%d",&a);                                                                             //Ввод переменных
    printf_s("b = ");
    scanf_s("%d",&b);
    printf_s("c = ");
    scanf_s("%d",&c);
    if ((a > b + c) || (b > a + c) || (c > a + b)) printf_s("Такого треугольника не существует"); //Проверка существования треугольника
    else if (((a == b) || (a == c)) && ((a > c) || (a > b)) || ((c == b) && (c > a))) printf_s("Равнобедренный, остроугольный треугольник");
    else if (a > b && a > c){              
        d = b * b + c * c;                                                                        //Находит квадрат меньших сторон (понадобится
        if (a * a == d) printf_s("Это прямоугольный треугольник");                                //для определения типа треугольника)
        else if (a * a < d) printf_s("Это остроугольный треугольник");
        else if (a * a > d) printf_s("Это тупоугольный треугольник");
         }
    else if (b > c && b > a) {
        d = a * a + c * c;
        if (b * b == d) printf_s("Это прямоугольный треугольник");
        else if (b * b < d) printf_s("Это остроугольный треугольник");
        else if (b * b > d) printf_s("Это тупоугольный треугольник");
         }
    else if (c > b && c > a) {
        d = b * b + a * a;
        if (c * c == d) printf_s("Это прямоугольный треугольник");
        else if (c * c < d) printf_s("Это остроугольный треугольник");
        else if (c * c > d) printf_s("Это тупоугольный треугольник");
         }
    else if (a == b && a == c) printf_s("Равносторонний, остроугольный треугольник");              //Проверяет на равносторонность треугольника
    return 0;
}

